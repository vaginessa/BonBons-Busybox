#!/sbin/sh# "BONBON'S AROMA BUSYBOX INSTALLER"#Made by _Bon_Bon(@XDA)#All parts of this MOD and all the code in it#are protected by GNU GPL, version 3#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)#see <http://www.gnu.org/licenses/> for details#TO-DO#	Cleanup the code##Delete next comment to enable debuging#set -xPATH=/system/bin:/sbin:/system/xbin#-- Permission changer --#Set_Perm(){	chown $1:$2 $4	chmod $3 $4}#-- Get propersties from AROMA installers .prop filesFILE_GETPROP () {  grep "^$2=" "$1" | cut -d= -f2}#-- Get the desired build	case $(FILE_GETPROP "/tmp/aroma/busybox.prop" "selected") in		1) BBVER=Busybox_full_;;		2) BBVER=Busybox_modular_;;		3) BBVER=Busybox_minimalistic_;;		4) BBVER=Busybox_snapshot_;;	esac	#-- List of properties to test	CPU_CHECKS=( ro.product.cpu.abi ro.product.cpu.abi2 ro.product.cpu.abilist )	for CPU in ${CPU_CHECKS[*]}; do		case $(getprop $CPU) in			*arm*) BBVER="${BBVER}arm";;	#-- Architecture is arm or arm64			*x86*) BBVER="${BBVER}x86";;		#-- Architecture is 32bit			*mips*) BBVER="${BBVER}mips";;	#-- Architecture is mips			*);;		esac		#-- If architecture found exit		if [[ $1 = "-c" && $BBVER =~ [armx|x86|mips] ]]; then			echo $BBVER			exit		fi	done	#-- If ARCHITECTURE is empty ERROR	[ -z $ARCHITECTURE ] && echo "| Reported processor architecture isn't supported or ro.product.cpu.abi[list] isn't supported |"#-- Process updater-script callscase $1 in	-c)	#-- Nothing more to do, exit		exit	;;	-i)		#-- Handle removal and instal of applets --#		for BUSY_DIR in "/system/xbin" "/system/bin" "/sbin"; do			if [ -e ${BUSY_DIR}/busybox ]; then				BB_OLD=$(${BUSY_DIR}/busybox | ./busybox head -1 | ./busybox awk '{print $1,": ",$2}')				BB_LIST[$(((${#BB_LIST[@]})+1))]="$BUSY_DIR"			fi		done		#-- Get the new applets inside a string		APPLETS="$(./$BBVER --list)"		for BUSY_DIR in ${BB_LIST[*]}; do			DONT_REMOVE="false"			for REMOVE in $(./$BBVER find "${BUSY_DIR}" -type l); do	#-- Find all busybox symlinks in BUSY_DIR				if [[ $(echo "$(./$BBVER readlink $REMOVE)") =~ "busybox" ]]; then					if [[ "$REMOVE" =~ "$APPLETS" ]]; then	#-- If the applet is present in new busybox remove it						[ ! "X$BUSY_DIR" = "/system/xbin" ] && eval INST_$(echo $BUSY_DIR | ./$BBVER awk -F/ '{print $1 $2 $3}')+=($REMOVE)						rm $REMOVE					else	#-- Don't delete old busybox, rename it to keep the applet						if [ "X$DONT_REMOVE" = "Xfalse" ]; then							DONT_REMOVE="true"							mv ${BUSY_DIR}/busybox ${BUSY_DIR}/old_busybox							Set_Perm 0 2000 0755 ${BUSY_DIR}/old_busybox						fi						#-- Repoint the symlink						ln -sfT ${BUSY_DIR}/old_busybox $REMOVE						Set_Perm 0 2000 0755 $REMOVE					fi				fi			done			if [ "X$DONT_REMOVE" = "Xfalse" ]; then	#-- If no old applets that aren't in the new busybox, remove old busybox				rm ${BUSY_DIR}/busybox			fi		done		#-- Install new Busybox --#		mv ./$BBVER /system/xbin/busybox		Set_Perm 0 2000 0755 /system/xbin/busybox		for INSTALL in $(/system/xbin/busybox --list); do			unset BUSY_DIR	#-- Reset directories			#-- For all removed applets in bin and sbin, re-install them			[[ "$INSTALL" =~ "${INST_systembin}" ]] && BUSY_DIR+=(/system/bin)			[[ "$INSTALL" =~ "${INST_sbin}" ]] && BUSY_DIR+=(/sbin)			#-- Install all applets in xbin			BUSY_DIR+=(/system/xbin)			for DIR in ${BUSY_DIR[*]}; do				/system/xbin/busybox ln -sf /system/xbin/busybox ${DIR}/$INSTALL				Set_Perm 0 2000 0755 ${DIR}/$INSTALL			done		done		exit 0	;;esacexit#-- This code won't ever be reached, but it's here as a backup if I ever need it#-- Removing old Busyboxes --#BB_OLD=$(/system/xbin/busybox | /tmp/$BBVER head -1 | /tmp/$BBVER awk '{print $1,": ",$2}')if [ -n "$BB_OLD" ]; then	UI_PR "- Removing the previous busybox: $BB_OLD"else	UI_PR "- No previous busybox installations"fiUI_PR " "sleep 2for i in $(/tmp/$BBVER find /system/xbin -type l); do	if echo "$(/tmp/$BBVER readlink $i)" | /tmp/$BBVER grep -q busybox; then		/tmp/$BBVER rm $i		UI_PR "- Removed old symlink '$(echo $i | awk -F / '{print $3}')'"	fidoneSET_PROG 0.6#-- Installing new Busybox --#UI_PR " "UI_PR "- Installing new busybox"UI_PR " "mv /tmp/$BBVER /system/xbin/busyboxSet_Perm 0 2000 0755 /system/xbin/busyboxsleep 2SET_PROG 0.7for i in $(/system/xbin/busybox --list); do 	/system/xbin/busybox ln -sf /system/xbin/busybox /system/xbin/$i	Set_Perm 0 2000 0755 /system/xbin/$i	UI_PR "- Symlinked and set permissions for '$i'"doneSET_PROG 0.9UI_PR "* DONE! Busybox was installed! *"UI_PR " "SET_PROG 1.0