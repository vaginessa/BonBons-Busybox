#!/sbin/sh# "BONBON'S AROMA BUSYBOX INSTALLER"#Made by _Bon_Bon(@XDA)#All parts of this MOD and all the code in it#are protected by GNU GPL, version 3#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)#see <http://www.gnu.org/licenses/> for details#TO-DO#	Nothing :)##Delete next comment to enable debuging#set -xOUTFD=/proc/self/fd/$2ZIPNAME=$3mount /systemmount -o remount,rw /system#-- Permission changer --#Set_Perm(){	chown $1:$2 $4	chmod $3 $4}#-- ui_print --#UI_PR(){  echo "ui_print $1" > "$OUTFD"}#-- SET_PROGRESSSET_PROG () {	echo "set_progress $1" > "$OUTFD"}#-- ERROR --#ERROR () {	UI_PR "** ERROR **"	UI_PR "* Your device isn't combatiple with this installer *"	UI_PR "* $1 *"	UI_PR "* Exiting *"	SET_PROG 1.0	exit}#-- Get propersties from AROMA installers .prop filesFILE_GETPROP () {  grep "^$2=" "$1" | cut -d= -f2}#-- Menu --#UI_PR "___________________"UI_PR "_Busybox Installer_"UI_PR "____By:  BonBon____"UI_PR "___________________"UI_PR " "SET_PROG 0.1#-- Get the desired build[ $(FILE_GETPROP "/tmp/aroma/busybox.prop" "selected") -eq 1 ]case $(FILE_GETPROP "/tmp/aroma/busybox.prop" "selected") in	1) BBVER=Busybox_full_;;	2) BBVER=Busybox_modular_;;	3) BBVER=Busybox_minimalistic_;;	4) BBVER=Busybox_snapshot_;;esacfor CPU in ro.product.cpu.abi ro.product.cpu.abi2 ro.product.cpu.abilist; do	CPU_STAT=$(getprop $CPU)	if [ -n $CPU_STAT ]; then		case $CPU_STAT in			*arm*)				echo "$CPU reports processor architecture is ARM"				BBVER=${BBVER}arm*			;;			*x86*)				echo "$CPU reports processor architecture is x86"				BBVER=${BBVER}x86*			;;			*mips*)				echo "$CPU reports processor architecture is MIPS"				BBVER=${BBVER}mips*			;;			*) ERROR "Reported processor architecture isn't supported";;		esac	fidone[ -z $ARCHITECTURE ] && ERROR "* ro.product.cpu.abi[list] isn't supported *"SET_PROG 0.3#-- extracting new busybox --#unzip -o "$ZIPNAME" $BBVER -d /tmpUI_PR "- Your busybox is: $BBVER"UI_PR " "sleep 2SET_PROG 0.4#-- Removing old Busyboxes --#BB_OLD=$(/system/xbin/busybox | /tmp/$BBVER head -1 | /tmp/$BBVER awk '{print $1,": ",$2}')if [ -n "$BB_OLD" ]; then	UI_PR "- Removing the previous busybox: $BB_OLD"else	UI_PR "- No previous busybox installations"fiUI_PR " "sleep 2for i in $(/tmp/$BBVER find /system/xbin -type l); do	if echo "$(/tmp/$BBVER readlink $i)" | /tmp/$BBVER grep -q busybox; then		/tmp/$BBVER rm $i		UI_PR "- Removed old symlink '$(echo $i | awk -F / '{print $3}')'"	fidoneSET_PROG 0.6#-- Installing new Busybox --#UI_PR " "UI_PR "- Installing new busybox"UI_PR " "mv /tmp/$BBVER /system/xbin/busyboxSet_Perm 0 2000 0755 /system/xbin/busyboxsleep 2SET_PROG 0.7for i in $(/system/xbin/busybox --list); do 	/system/xbin/busybox ln -sf /system/xbin/busybox /system/xbin/$i	Set_Perm 0 2000 0755 /system/xbin/$i	UI_PR "- Symlinked and set permissions for '$i'"doneSET_PROG 0.9UI_PR "* DONE! Busybox was installed! *"UI_PR " "SET_PROG 1.0