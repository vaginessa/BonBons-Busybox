#!/bin/sh
# "BONBON'S STATIC BUSYBOX INSTALLER"
#Made by _Bon_Bon(@XDA)
#All parts of this MOD and all the code in it
#are protected by GNU GPL, version 3
#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)
#see <http://www.gnu.org/licenses/> for details
#TO-DO
#	Clean up the code ?
#	Move from $VAR to ${var}
#	Look into compacting busybox installation
#	Try to move back to using =~
#	Look into symlinks to busybox that doesn't exist in the same directory
#
#-- Set variables
OUTFD=/proc/self/fd/$2
ZIPNAME=$3
#-- Mount /system
mount /system
mount -o remount,rw /system
#-- Permission changer
Set_Perm(){
	chown $1:$2 $4
	chmod $3 $4
}
#-- ui_print
UI_PR(){
  echo "ui_print $1" > "${OUTFD}"
}
#-- set_progress
SET_PROG () {
	echo "set_progress $1" > "${OUTFD}"
}
#-- ERROR
ERROR () {
	UI_PR "ERROR"
	UI_PR "| Your device isn't combatiple with this installer |"
	UI_PR "> $1 <"
	UI_PR "Exiting"
	SET_PROG 1.0
	exit 1
}
#-- Create OTA survival script
crt_survival () {
	cat > /system/addon.d/90-BonBons_Busybox.sh <<EOFS
#!/sbin/sh
# "BONBON'S BUSYBOX OTA SURVIVER"
#Made by _Bon_Bon(@XDA)
#All parts of this SCRIPT and all the code in it
#are protected by GNU GPL, version 3
#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)
#see <http://www.gnu.org/licenses/> for details
#
#During CM upgrade, this script backs up Busybox and its symlinks
#/system is formated and reinstalled, then the files are restored
. /tmp/backuptool.functions
list_files () {
cat <<EOF
#DO NOT DELETE COMMENTS! IT WOULD BREAK UPDATE PROCESS
#Start_Of_busysurvival
#To be filled ;)
#End_Of_busysurvival
EOF
}
case "$1" in
backup)
	list_files | while read FILE DUMMY; do
		case ${FILE} in
		"#"*)
			#-- Is a comment, skip it
		;;
		*)
			backup_file $S/"$FILE"
		;;
		esac
	done
;;
restore)
	list_files | while read FILE REPLACEMENT; do
		case ${FILE} in
		"#"*)
			#-- Is a comment, skip it
		;;
		*)
			R=""
			[ -n "$REPLACEMENT" ] && R="$S/$REPLACEMENT"
			[ -f "$C/$S/$FILE" ] && restore_file $S/"$FILE" "$R"
		;;
		esac
	done
;;
pre-backup)
	#-- Stub
;;
post-backup)
	#-- Stub
;;
pre-restore)
	#-- Stub
;;
post-restore)
	#-- Stub
;;
esac
EOFS
}
#-- Menu --#
UI_PR "___________________"
UI_PR "_Busybox Installer_"
UI_PR "____By:  BonBon____"
UI_PR "___________________"
#-- Detect processor architecture --#
UI_PR "| Detecting processor architecture |"
SET_PROG 0.1
#-- List of properties to test
for CPU in ro.product.cpu.abi ro.product.cpu.abi2 ro.product.cpu.abilist; do
	case "$(getprop $CPU)" in
		*arm*) BBVER="arm";;	#-- Architecture is arm or arm64
		*x86*) BBVER="x86";;	#-- Architecture is 32bit intel, etc.
		*mips*) BBVER="mips";;	#-- Architecture is mips
		*) UI_PR "| $CPU yelled \"$(getprop $CPU)\" while it ran past |";;
	esac
	#-- If architecture found, output it and break out of the loop
	if [ -n ${BBVER} ]; then
		UI_PR "$CPU reports processor architecture is ${BBVER}"
		BBVER=busybox_${BBVER}
		break
	fi
done
#-- If BBVER is empty ERROR
[ -z ${BBVER} ] && ERROR "| Reported processor architecture or ro.product.cpu.abi[list] isn't supported |"
SET_PROG 0.2
#-- Extract new busybox
unzip -o "$ZIPNAME" ${BBVER} -d /tmp
BBVER=/tmp/${BBVER}
UI_PR "___________________"
UI_PR "| Removing old busybox installations |"
SET_PROG 0.3
sleep 3
#-- Get the new applets inside a string
APPLET_LIST="$(${BBVER} --list)"
#-- List of directories to handle
for BUSY_DIR in /system/bin /sbin /system/xbin; do
	DONT_REMOVE="false"
	for REMOVE in $(${BBVER} find "${BUSY_DIR}" -type l); do	#-- Find all busybox symlinks in BUSY_DIR
		if [[ "$(${BBVER} readlink ${REMOVE})" =~ "busybox" ]]; then	# BACKUP: -> ${BBVER} readlink ${REMOVE} | grep "busybox"
			if [[ "${APPLET_LIST}" =~ "${REMOVE##*/}" ]]; then 	#-- If the applet is present in new busybox repoint the symlink
				[ "${BUSY_DIR}" = "/system/xbin" ] && APPLET_LIST=${APPLET_LIST#${REMOVE##*/}}		#-- Remove the installed applet from APPLET_LIST
				${BBVER} ln -sfT /system/xbin/busybox ${REMOVE}
				Set_Perm 0 2000 0755 ${REMOVE}
				APPLET_SURV="${REMOVE} ${APPLET_SURV}"
			else	#-- Don't delete old busybox, rename it to keep the applet
				if [ "X${DONT_REMOVE}" = "Xfalse" ]; then
					DONT_REMOVE="true"
					UI_PR "Can't remove ${BUSY_DIR}/busybox"
					UI_PR "because it has applets that the new busybox doesn't have"
					UI_PR "So it will be renamed and the symlinks will be repointed"
					sleep 3
					mv ${BUSY_DIR}/busybox ${BUSY_DIR}/old_busybox
					Set_Perm 0 2000 0755 ${BUSY_DIR}/old_busybox
				fi
				#-- Repoint the symlink to renamed old_busybox
				UI_PR "| Re-symlinked and set permissions for \"${REMOVE}\" |"
				${BBVER} ln -sfT ${BUSY_DIR}/old_busybox ${REMOVE}
				Set_Perm 0 2000 0755 ${REMOVE}
			fi
		else
			UI_PR "${REMOVE} not a busybox symlink"
		fi
	done
	if [[ "X${DONT_REMOVE}" = "Xfalse" && -e ${BUSY_DIR}/busybox ]]; then	#-- If no old applets that aren't in the new busybox an the old busybox exists, remove old busybox
		UI_PR "Removed $(${BUSY_DIR}/busybox | ${BBVER} head -1 | ${BBVER} awk '{print $1,": ",$2}') from ${BUSY_DIR}"
		rm ${BUSY_DIR}/busybox
	fi
done
#-- Update or create ota survival script
if [ -d /system/addon.d ]; then
	UI_PR "/system/addon.d directory exists"
	if [ -e /system/addon.d/90-BonBons_Busybox.sh ]; then
		UI_PR "An old OTA survival script already exists, it will be updated"
	else
		UI_PR "No old OTA survival script exists, it will be created"
		crt_survival
	fi
	#-- Update the script
	mv /system/addon.d/90-BonBons_Busybox.sh /system/addon.d/90-BonBons_Busybox.sh_old
	printf '%s\n' $APPLET_SURV >> /tmp/file.txt
	awk 'BEGIN{f=1} /^#Start_Of_busysurvival/{print;system("cat /tmp/file.txt");p=0}/^#End_Of_busysurvival/{p=1};p}' /system/addon.d/90-BonBons_Busybox.sh_old > /system/addon.d/90-BonBons_Busybox.sh
	rm /system/addon.d/90-BonBons_Busybox.sh_old
	rm /tmp/file.txt
fi
SET_PROG 0.7
#-- Install rest of the Busybox applets --#
UI_PR "___________________"
UI_PR "| Finishing new busybox: $(${BBVER} | ${BBVER} head -1 | ${BBVER} awk '{print $1,": ",$2}') Installation |"
UI_PR " "
sleep 3
mv ${BBVER} /system/xbin/busybox
BBVER=/system/xbin/busybox
Set_Perm 0 2000 0755 /system/xbin/busybox
for INSTALL in $(${BBVER} printf '%s\n' ${APPLET_LIST}); do	#-- Install rest of the applets to xbin
	${BBVER} ln -sf /system/xbin/busybox /system/xbin/${INSTALL}
	Set_Perm 0 2000 0755 /system/xbin/${INSTALL}
done
SET_PROG 0.9
UI_PR "| DONE! Busybox was installed! |"
SET_PROG 1.0
exit 0
