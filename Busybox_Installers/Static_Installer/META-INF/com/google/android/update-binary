#!/sbin/sh
# "BONBON'S STATIC BUSYBOX INSTALLER"
#Made by _Bon_Bon(@XDA)
#All parts of this MOD and all the code in it
#are protected by GNU GPL, version 3
#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)
#see <http://www.gnu.org/licenses/> for details
#TO-DO
#	Clean up the code ?
#	Move from $VAR to ${DESIGNATION_var}
#	Move from FUNCTION to DESIGNATION_function
#	Move from i686 to x86
#
#-- Set variables
OUTFD=/proc/self/fd/$2
ZIPNAME=$3
#-- Mount /system
mount /system
mount -o remount,rw /system
#-- Permission changer
Set_Perm(){
	chown $1:$2 $4
	chmod $3 $4
}
#-- ui_print
UI_PR(){
  echo "ui_print $1" > "${OUTFD}"
}
#-- set_progress
SET_PROG () {
	echo "set_progress $1" > "${OUTFD}"
}
#-- ERROR
ERROR () {
	UI_PR "ERROR"
	UI_PR "| Your device isn't combatiple with this installer |"
	UI_PR "> $1 <"
	UI_PR "Exiting"
	SET_PROG 1.0
	exit 1
}
#-- Create OTA survival script
crt_survival () {
	cat > /system/addon.d/90-BonBons_Busybox.sh <<'EOFS'
#!/sbin/sh
# "BONBON'S BUSYBOX OTA SURVIVER"
#Made by _Bon_Bon(@XDA)
#All parts of this SCRIPT and all the code in it
#are protected by GNU GPL, version 3
#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)
#see <http://www.gnu.org/licenses/> for details
#
#During CM upgrade, this script backs up Busybox and after /system
#is formated and reinstalled, busybox will be reinstalled
. /tmp/backuptool.functions
list_files () {
cat <<EOF
/system/xbin/busybox
EOF
}
#-- Permission changer
Set_Perm(){
	chown $1:$2 $4
	chmod $3 $4
}
case "$1" in
backup)
	list_files | while read FILE DUMMY; do
		backup_file $S/"$FILE"
	done
;;
restore)
	#-- Stub
;;
pre-backup)
	#-- Stub
;;
post-backup)
	#-- Stub
;;
pre-restore)
	#-- Reinstall busybox
	BBVER=/tmp/backupdir/system/xbin/busybox
	#-- Get the applets inside a string
	LIST_applets="$(${BBVER} --list)"
	#-- Find all busybox binaries
	for LOOP_directory in $(find "/bin" -name "busybox" -type f -executable); do
		#-- Add path to list of directories to check later
		LIST_directories="$(dirname ${LOOP_directory}) ${LIST_directories}"
	done
	if [ -n ${LIST_directories} ]; then
		#-- Loop trough LIST_directories
		for LOOP_directory in $(${BBVER} printf '%s\n' ${LIST_directories}); do
			#-- Reset LOOP_remove for every directory
			LOOP_remove="false"
			#-- Find all symlinks in LOOP_directory
			for LOOP_file in $(${BBVER} find "${LOOP_directory}" -type l); do
				#-- Change this to be less hardcoded (=~ "busybox")
				#-- Look into busybox binaries that have links outside the install directory
				if [[ "$(${BBVER} readlink ${LOOP_file})" = "${LOOP_directory}/busybox" ]]; then
					#-- Check if the applet exists in the new binary
					if [[ "${LIST_applets}" =~ $(${BBVER} basename ${LOOP_file}) ]]; then
						#--Remove the link and include it into the install list
						rm -f ${LOOP_file}
						LIST_install="${LOOP_file} ${LIST_install}"
					else
						if [ "X ${LOOP_remove}" = "X false" ]; then
							LOOP_remove="not as false :P"
							#-- Promt the user and rename the binary
							echo "${LOOP_directory}/busybox can't be removed,"
							echo "because it has applets, that the new busybox"
							echo "doesn't have. It will be renamed and the links repointed"
							mv ${LOOP_directory}/busybox ${LOOP_directory}/busybox_old
						fi
						#-- Repoint the symlink
						${BBVER} ln -sfT ${LOOP_directory}/busybox_old ${LOOP_file}
						Set_Perm 0 2000 0755 ${LOOP_file}
					fi
				fi
			done
		done
	else
		echo "| No old busybox binaries found |"
	fi
	#-- Install rest of the Busybox applets
	mv ${BBVER} /system/xbin/busybox
	BBVER=/system/xbin/busybox
	Set_Perm 0 2000 0755 /system/xbin/busybox
	if [ -n ${LIST_install} ]; then
	#-- Install files found earlier
		for LOOP_install in $(${BBVER} printf '%s\n' ${LIST_install}); do
			${BBVER} ln -sfT /system/xbin/busybox /system/xbin/${LOOP_install}
			Set_Perm 0 2000 0755 /system/xbin/${LOOP_install}
		done
	fi
	#-- Install all applets to xbin
	for LOOP_install in $(${BBVER} printf '%s\n' ${LIST_applets}); do
		${BBVER} ln -sfT /system/xbin/busybox /system/xbin/${LOOP_install}
		Set_Perm 0 2000 0755 /system/xbin/${LOOP_install}
	done
;;
post-restore)
	#-- Stub
;;
esac
EOFS
}
#-- Menu --#
UI_PR "_________________________"
UI_PR "_Smart Busybox Installer_"
UI_PR "_______By:  BonBon_______"
UI_PR "_________________________"
#-- Detect processor architecture --#
UI_PR "| Detecting processor architecture |"
SET_PROG 0.1
#-- List of properties to test
for CPU in ro.product.cpu.abi ro.product.cpu.abi2 ro.product.cpu.abilist; do
	case "$(getprop $CPU)" in
		*arm*) BBVER="arm";;	#-- Architecture is arm or arm64
		*x86*) BBVER="x86";;	#-- Architecture is 32bit intel, etc.
		*mips*) BBVER="mips";;	#-- Architecture is mips
		*) UI_PR "| $CPU yelled \"$(getprop $CPU)\" while it ran past |";;
	esac
	#-- If architecture found, output it and break out of the loop
	if [ -n ${BBVER} ]; then
		UI_PR "| $CPU reports processor |"
		UI_PR "| architecture is ${BBVER} |"
		BBVER="Busybox_${BBVER}"
		break
	fi
done
#-- If BBVER is empty ERROR
[ -z ${BBVER} ] && ERROR "| Reported processor architecture or ro.product.cpu.abi[list] isn't supported |"
SET_PROG 0.2
#-- Extract new busybox
unzip -o "${ZIPNAME}" ${BBVER} -d /tmp
BBVER=/tmp/${BBVER}
UI_PR "_________________________"
UI_PR "| Replacing old busybox installations |"
SET_PROG 0.3
sleep 3
#-- Get the new applets inside a string
LIST_applets="$(${BBVER} --list)"
#-- Find all busybox binaries
for LOOP_directory in $(find "/bin" -name "busybox" -type f -executable); do
	#-- Add path to list of directories to check later
	LIST_directories="$(dirname ${LOOP_directory}) ${LIST_directories}"
done
if [ -n ${LIST_directories} ]; then
	#-- Loop trough LIST_directories
	for LOOP_directory in $(${BBVER} printf '%s\n' ${LIST_directories}); do
		#-- Reset LOOP_remove for every directory
		LOOP_remove="false"
		#-- Find all symlinks in LOOP_directory
		for LOOP_file in $(${BBVER} find "${LOOP_directory}" -type l); do
			#-- Change this to be less hardcoded (=~ "busybox")
			if [[ "$(${BBVER} readlink ${LOOP_file})" = "${LOOP_directory}/busybox" ]]; then
				#-- Check if the applet exists in the new binary
				if [[ "${LIST_applets}" =~ $(${BBVER} basename ${LOOP_file}) ]]; then
					#--Remove the link and include it into the install list
					rm -f ${LOOP_file}
					LIST_install="${LOOP_file} ${LIST_install}"
				else
					if [ "X ${LOOP_remove}" = "X false" ]; then
						LOOP_remove="not as false :P"
						#-- Promt the user and rename the binary
						UI_PR "${LOOP_directory}/busybox can't be removed,"
						UI_PR "because it has applets, that the new busybox"
						UI_PR "doesn't have. It will be renamed and the links repointed"
						mv ${LOOP_directory}/busybox ${LOOP_directory}/busybox_old
					fi
					#-- Repoint the symlink
					${BBVER} ln -sfT ${LOOP_directory}/busybox_old ${LOOP_file}
					Set_Perm 0 2000 0755 ${LOOP_file}
				fi
			fi
		done
	done
else
	UI_PR "| No old busybox binaries found |"
fi
SET_PROG 0.5
#-- Install rest of the Busybox applets --#
UI_PR "_________________________"
UI_PR "| Finishing installation of: |"
UI_PR "| $(${BBVER} | ${BBVER} head -1 | ${BBVER} awk '{print $1,": ",$2}') |"
sleep 3
mv ${BBVER} /system/xbin/busybox
BBVER=/system/xbin/busybox
Set_Perm 0 2000 0755 /system/xbin/busybox
if [ -n ${LIST_install} ]; then
	#-- Install files found earlier
	for LOOP_install in $(${BBVER} printf '%s\n' ${LIST_install}); do
		${BBVER} ln -sfT /system/xbin/busybox /system/xbin/${LOOP_install}
		Set_Perm 0 2000 0755 /system/xbin/${LOOP_install}
	done
fi
#-- Install all applets to xbin
for LOOP_install in $(${BBVER} printf '%s\n' ${LIST_applets}); do
	${BBVER} ln -sfT /system/xbin/busybox /system/xbin/${LOOP_install}
	Set_Perm 0 2000 0755 /system/xbin/${LOOP_install}
done
SET_PROG 0.7
#-- Update / create ota survival script
UI_PR "_________________________"
UI_PR "| Create OTA survival script |"
if [ -d /system/addon.d ]; then
	UI_PR "! /system/addon.d directory exists"
	if [ -e /system/addon.d/90-BonBons_Busybox.sh ]; then
		UI_PR "! An old OTA survival script already"
		UI_PR "  exists, it will be updated"
	else
		UI_PR "! No old OTA survival script exists,"
		UI_PR "  it will be created"
	fi
	#-- Update the script
	crt_survival
else
	UI_PR "! /system/addon.d directory doesn't exist"
	UI_PR "  OTA survival won't be applied"
fi
SET_PROG 0.9
UI_PR "| DONE! Busybox was installed! |"
SET_PROG 1.0
exit 0
