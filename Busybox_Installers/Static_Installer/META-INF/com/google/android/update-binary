#!/sbin/sh
# "BONBON'S STATIC BUSYBOX INSTALLER"
#Made by _Bon_Bon(@XDA)
#All parts of this MOD and all the code in it
#are protected by GNU GPL, version 3
#Copyright (C) 2016 Francisco Pulido Garces (_Bon_Bon)
#see <http://www.gnu.org/licenses/> for details
#TO-DO
#	Clean up the code ?
#
#Delete next comment to enable debugging
#-- Set variables
OUTFD=/proc/self/fd/$2
ZIPNAME=$3
#-- Mount /system
mount /system
mount -o remount,rw /system
#-- Permission changer
Set_Perm(){
	chown $1:$2 $4
	chmod $3 $4
}
#-- ui_print
UI_PR(){
  echo "ui_print $1" > "$OUTFD"
}
#-- set_progress
SET_PROG () {
	echo "set_progress $1" > "$OUTFD"
}
#-- ERROR
ERROR () {
	UI_PR "** ERROR **"
	UI_PR "* Your device isn't combatiple with this installer *"
	UI_PR "* $1 *"
	UI_PR "* Exiting *"
	SET_PROG 1.0
	exit 1
}
#-- Menu --#
UI_PR "___________________"
UI_PR "_Busybox Installer_"
UI_PR "____By:  BonBon____"
UI_PR "___________________"
UI_PR ""
UI_PR "___________________"
#-- Detect processor architecture --#
UI_PR "| Detecting processor architecture |"
SET_PROG 0.1
#-- List of properties to test
CPU_CHECKS=( ro.product.cpu.abi ro.product.cpu.abi2 ro.product.cpu.abilist )
for CPU in ${CPU_CHECKS[*]}; do
	case $(getprop $CPU) in
		*arm*) BBVER="arm";;	#-- Architecture is arm or arm64
		*x86*) BBVER="x86";;		#-- Architecture is 32bit
		*mips*) BBVER="mips";;	#-- Architecture is mips
		*) UI_PR "| $CPU yelled $(getprop $CPU) while it ran past |";;
	esac
	#-- If architecture found, output it and break out of the loop
	if [ -n $BBVER ]; then
		UI_PR "$CPU reports processor architecture is $BBVER"
		BBVER=busybox_${BBVER}
		break
	fi
done
#-- If BBVER is empty ERROR
[ -z $BBVER ] && ERROR "| Reported processor architecture or ro.product.cpu.abi[list] isn't supported |"
SET_PROG 0.2
#-- Extract new busybox
unzip -o "$ZIPNAME" $BBVER -d /tmp
BBVER=/tmp/$BBVER
UI_PR ""
UI_PR "___________________"
UI_PR "| Removing old busybox installations |"
SET_PROG 0.3
sleep 3
#-- Get the new applets inside a string
APPLETS="$($BBVER --list)"
for BUSY_DIR in ${BB_LIST[*]}; do
	DONT_REMOVE="false"
	for REMOVE in $($BBVER find "${BUSY_DIR}" -type l); do	#-- Find all busybox symlinks in BUSY_DIR
		if [[ "$($BBVER readlink $REMOVE)" =~ "busybox" ]]; then
			if [[ "$REMOVE" =~ "$APPLETS" ]]; then	#-- If the applet is present in new busybox remove it
				[ ! "X$BUSY_DIR" = "/system/xbin" ] && $BBVER eval INST_$(echo $BUSY_DIR | $BBVER awk -F/ '{print $1 $2 $3}')+=$REMOVE
				rm $REMOVE
				UI_PR "Removed old symlink: $(echo $REMOVE | $BBVER awk -F/ '{print $4}')"
			else	#-- Don't delete old busybox, rename it to keep the applet
				if [ "X$DONT_REMOVE" = "Xfalse" ]; then
					DONT_REMOVE="true"
					UI_PR "Can't remove ${BUSY_DIR}/busybox"
					UI_PR "because it has applets that the new busybox doesn't have"
					UI_PR "So I'll rename it and repoint the symlinks"
					sleep 3
					mv ${BUSY_DIR}/busybox ${BUSY_DIR}/old_busybox
					Set_Perm 0 2000 0755 ${BUSY_DIR}/old_busybox
				fi
				#-- Repoint the symlink
				UI_PR "| Re-symlinked and set permissions for \"$REMOVE\" |"
				$BBVER ln -sfT ${BUSY_DIR}/old_busybox $REMOVE
				Set_Perm 0 2000 0755 $REMOVE
			fi
		fi
	done
	if [ "X$DONT_REMOVE" = "Xfalse" ]; then	#-- If no old applets that aren't in the new busybox, remove old busybox
		UI_PR "Removed $(${BUSY_DIR}/busybox | $BBVER head -1 | $BBVER awk '{print $1,": ",$2}')"
		rm ${BUSY_DIR}/busybox
	fi
done
SET_PROG 0.6
#-- Install new Busybox --#
UI_PR ""
UI_PR "___________________"
UI_PR "| Installing new busybox: $($BBVER | $BBVER head -1 | $BBVER awk '{print $1,": ",$2}') |"
UI_PR ""
sleep 3
mv $BBVER /system/xbin/busybox
Set_Perm 0 2000 0755 /system/xbin/busybox
for INSTALL in $(/system/xbin/busybox --list); do
	unset BUSY_DIR	#-- Reset directories
	#-- For all removed applets in bin and sbin, re-install them
	[[ "$INSTALL" =~ "${INST_systembin}" ]] && BUSY_DIR+=(/system/bin)
	[[ "$INSTALL" =~ "${INST_sbin}" ]] && BUSY_DIR+=(/sbin)
	#-- Install all applets in xbin
	BUSY_DIR+=(/system/xbin)
	for DIR in ${BUSY_DIR[*]}; do
		/system/xbin/busybox ln -sf /system/xbin/busybox ${DIR}/$INSTALL
		Set_Perm 0 2000 0755 ${DIR}/$INSTALL
		echo "| Symlinked and set permissions for \"${DIR}$INSTALL\" |"
	done
done
SET_PROG 0.9
echo "| DONE! Busybox was installed! |"
SET_PROG 1.0
exit 0
